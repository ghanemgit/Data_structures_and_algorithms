/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package CodeChallenges.Challenge10;

import CodeChallenges.Challenge10.Node;
import CodeChallenges.Challenge10.Queue;
import CodeChallenges.Challenge10.Stack;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {

    Node newNode;
    Queue queue;
    Stack stack;

    @BeforeEach
    void setUp(){
        newNode = new Node();
        queue = new Queue();
        stack = new Stack();
    }

    @Test
    @DisplayName("Stack test")
    void stackTest(){
        List<String> expected = new ArrayList<>();
        List<String> actual = new ArrayList<>();

        expected.add("Your stack is => { 4 } => { 3 } => { 2 } => { 1 } =>  null");
        expected.add("The value was deleted is => 4");
        expected.add("The top value now => 3");
        expected.add("Your stack is => { 3 } => { 2 } => { 1 } =>  null");


        stack.push(1);
        stack.push(2);
        stack.push(3);
        stack.push(4);
        actual.add(stack.printAll());
        actual.add("The value was deleted is => " + stack.pop());
        actual.add("The top value now => " + stack.peek());
        actual.add(stack.printAll());

        assertLinesMatch(expected,actual);


    }

    @Test
    @DisplayName("queue test")
    void queueTest(){

        List<String> expected = new ArrayList<>();
        List<String> actual = new ArrayList<>();

        expected.add("Your queue is => { 1 } => { 2 } => { 3 } => { 4 } => null");
        expected.add("The value was deleted from the front of the queue => 1");
        expected.add("The front value now => 2");
        expected.add("Your queue is => { 2 } => { 3 } => { 4 } => null");

        queue.enqueue(1);
        queue.enqueue(2);
        queue.enqueue(3);
        queue.enqueue(4);
        actual.add(queue.printAll());
        actual.add("The value was deleted from the front of the queue => " + queue.dequeue());
        actual.add("The front value now => " + queue.peek());
        actual.add(queue.printAll());


        assertLinesMatch(expected,actual);


    }

}
